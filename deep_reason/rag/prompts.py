from dataclasses import dataclass
from typing import Optional

from langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder

keywords_extraction_prompt_template = ChatPromptTemplate.from_messages(
    [
        ("system", """
Пользователь дает тебе вопрос или преложение. Твоя задача сформировать список поисковых термов для поиска в базе данных ElasticSearch.
Выдели все важные ключевые слова, термины и аббревиатуры из следующего вопроса и запиши их в виде списка слов через запятую.
ИСПОЛЬЗУЙ ТОЛЬКО СЛОВА и СЛОВОФОРМЫ ИЗ ПРЕДСТАВЛЕННОГО ВОПРОСА. 
НЕ добавляй в список слова, термины и аббервиатуры, которых нет в исходном вопросе и НЕ отвечай на сам вопрос! 

Вот несколько примеров вопросов и сгенерированных списков.
Вопрос: Что такое кдд?
Ответ: кдд

Вопрос: Как подключается насос высокого давления к нефтевышке?
Ответ: подключать, насос, высокое, давление, нефтевышка

Вопрос: Дай список правил ТТН
Ответ: список, правил, ТТН
         
Сформируй свой ответ в следующем формате JSON:
{response_format_description}

Отвечай только на русском и используй формат JSON.
"""),
        ("user", "{question}")
    ]
)


planner_prompt_template = ChatPromptTemplate.from_messages(
    [
        ("system", """"
Ты система осуществляющая планирование запросов нужной для пользователя информации в векторной базе с документами разделенными на небольшие сегменты. \
Для каждого поступившего запроса от пользователя \
твоя задача, при необходимости, разделить его на несколько запросов к векторной базе данных для получения нужной для ответа информации. \
Ты должен написать итоговые запросы "Запросы:", а потом написать объяснение "Объяснение:". И запросы и объяснение должны быть на русском языке. \
Например, вопрос "назови столицу России" не нуждается в разделении, необходимая информация о столице России будет извлечена. \
В свою очередь, запрос "Сравни автомобили ауди q5 и audi q7" уже должен быть разделен на два: "Какие преимущества и недостатки и audi q5" и "Какие преимущества и недостатки у audi q7", т.к. нам \
нужна информация по обоим объектам для проведения сравнения. 
Пользуйся следующим набором правил:
1. Каждый следующий вопрос не должен опираться на результат ответа предыдущего (нельзя: "Какие из этих технологий..."). Агрегация информации произойдет позднее.
2. Пиши генерируемые вопросы на том же языке, что и пользовательский запрос.
3. Учитывай что у пользовательского запроса есть контекст, который нельзя терять.
4. Если пользовательский запрос можно разделить на несколько, не забудь добавить необходимый контекст для независимого поиска по базе.

Сформируй свой ответ в следующем формате JSON:
{response_format_description}
"""),
        ("user", "{question}")
    ]
)


reranker_prompt_template = ChatPromptTemplate.from_messages(
    [
        ("system", """
Ты - система осуществляющая отбор текстов подходящих к запросу для дальнейшей передаче информации системе генерации финального ответа на запрос. \
Тебе будет предоставлен ЗАПРОС пользователя и ТЕКСТ. Твоя задача по 10-ти балльной шкале оценить, насколько ТЕКСТ несет полезную информацию \
для ответа на ЗАПРОС. 
         
Сформируй свой ответ в следующем формате JSON:
{response_format_description}

Отвечай только на русском и используй формат JSON.
"""),
        ("user", """

ЗАПРОС:
{question}

ТЕКСТ: 
{context}

""")
    ]
)


chat_answer_prompt_template = ChatPromptTemplate.from_messages(
    [
        ("system", "Ты - система отвечающая на вопросы пользователей по источникам. "
                   "Тебе представлен вопрос пользователя и набор источников. "
                   "Для каждого источника может быть указана дата его публикации. "
                   "Используй ее для указания в ответе точного года, "
                   "если в источнике есть указания на прошлые или будущие годы."
                   "Для ответа используй только информацию в представленных источниках. "
                   "Если на вопрос нельзя ответить исходя из источников "
                   "напиши \"Недостаточно информации для ответа\"."),
        ("human", "{context}\nВопрос: {question}\n")
    ]
)

